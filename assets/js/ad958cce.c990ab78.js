"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[430],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,g=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6647:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"header-generator",title:"Header generator"},l=void 0,c={unversionedId:"guides/header-generator",id:"guides/header-generator",title:"Header generator",description:"NodeJs package for generating browser-like headers.",source:"@site/../docs/guides/headergen.md",sourceDirName:"guides",slug:"/guides/header-generator",permalink:"/fingerprint-suite/docs/guides/header-generator",draft:!1,tags:[],version:"current",lastUpdatedBy:"Jind\u0159ich B\xe4r",lastUpdatedAt:1653393539,formattedLastUpdatedAt:"5/24/2022",frontMatter:{id:"header-generator",title:"Header generator"},sidebar:"docs",previous:{title:"Fingerprint generator",permalink:"/fingerprint-suite/docs/guides/fingerprint-generator"},next:{title:"Fingerprint Injector",permalink:"/fingerprint-suite/docs/guides/fingerprint-injector"}},p={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Presets",id:"presets",level:2},{value:"Result example",id:"result-example",level:2},{value:"API Reference",id:"api-reference",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"NodeJs package for generating browser-like headers."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usage"},"Usage")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#presets"},"Presets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#result-example"},"Result example")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#api-reference"},"API Reference"))),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"Run the ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install header-generator")," command. No further setup is needed afterwards."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"To use the generator, you need to create an instance of the ",(0,i.kt)("inlineCode",{parentName:"p"},"HeaderGenerator")," class which is exported from this package. Constructor of this class accepts a ",(0,i.kt)("inlineCode",{parentName:"p"},"HeaderGeneratorOptions")," object, which can be used to globally specify what kind of headers you are looking for: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const { HeaderGenerator } = require(\'header-generator\');\nlet headerGenerator = new HeaderGenerator({\n        browsers: [\n            {name: "firefox", minVersion: 80},\n            {name: "chrome", minVersion: 87},\n            "safari"\n        ],\n        devices: [\n            "desktop"\n        ],\n        operatingSystems: [\n            "windows"\n        ]\n});\n')),(0,i.kt)("p",null,"You can then get the headers using the ",(0,i.kt)("inlineCode",{parentName:"p"},"getHeaders")," method, either with no argument, or with another ",(0,i.kt)("inlineCode",{parentName:"p"},"HeaderGeneratorOptions")," object, this time specifying the options only for this call (overwriting the global options when in conflict) and using the global options specified beforehands for the unspecified options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'let headers = headersGenerator.getHeaders({\n        operatingSystems: [\n            "linux"\n        ],\n        locales: ["en-US", "en"]\n});\n')),(0,i.kt)("p",null,"This method always generates a random realistic set of headers, excluding the request dependant headers, which need to be filled in afterwards. Since the generation is randomized, multiple calls to this method with the same parameters can generate multiple different outputs."),(0,i.kt)("h2",{id:"presets"},"Presets"),(0,i.kt)("p",null,"Presets are setting templates for common use cases. It saves time writing the same configuration over and over."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { HeaderGenerator, PRESETS } = require('header-generator');\nlet headerGenerator = new HeaderGenerator(PRESETS.MODERN_WINDOWS_CHROME);\n")),(0,i.kt)("p",null,"This preset will fill the configuration for the latest five versions of chrome for windows desktops. Checkout the available presets list here @TODO: LINK."),(0,i.kt)("h2",{id:"result-example"},"Result example"),(0,i.kt)("p",null,"A result that can be generated for the usage example above:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sec-ch-ua-mobile": "?0",\n  "user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36",\n  "accept-encoding": "gzip, deflate, br",\n  "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",\n  "upgrade-insecure-requests": "1",\n  "accept-language": "en-US,en;0.9",\n  "sec-fetch-site": "same-site",\n  "sec-fetch-mode": "navigate",\n  "sec-fetch-user": "?1",\n  "sec-fetch-dest": "document"\n}\n')),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("p",null,"All public classes, methods and their parameters can be inspected in this API reference."),(0,i.kt)("p",null,"{{>all-docs~}}"))}f.isMDXComponent=!0}}]);